/* Defining global variables used for card dimensions*/
:root {
    --cardRadius: 16px;
    --cardPhotoHeight: 500px;
    --cardOffset: 16px;
    --cardWidth: 400px;
    --translucentColor: rgba(255, 255, 255, 0.2);
}

/* Defining breakpoints */

/* Extra small size (mobile devices) */
@media screen and (min-width: 300px) and (max-width: 1023px) {
    .mainGrid {
        width: 100%;
        grid-template-columns: repeat(1, 1fr);
    }

    :root {
        --cardPhotoHeight: 250px;
    }
}

/* Small size (Large mobile devices and small tablets) */
@media screen and (min-width: 480px) and (max-width: 1023px) {
    .mainGrid {
        width: 100%;
        grid-template-columns: repeat(1, 1fr);
        max-width: 768px;
    }

    .overlaidText h1 {
        font-size: 2em !important;
    }

    :root {
        --cardPhotoHeight: 250px;
    }
}

/* Medium size (Large tablets and Laptops) */
@media screen and (min-width: 1024px) and (max-width: 1299px) {
    .mainGrid {
        width: 854px;
        grid-template-columns: repeat(2, 1fr);
        max-width: 854px;
    }

    :root {
        --cardPhotoHeight: 300px;
    }
}

/* Large size (Desktops) */
@media screen and (min-width: 1300px) {
    .mainGrid {
        width: 1280px;
        grid-template-columns: repeat(3, 1fr);
        max-width: 1280px;
    }
}

/* Adding breakpoint to reduce image height in entries to better fit content on screen for smaller screens */
@media screen and (max-width: 480px) {
    :root {
        --cardPhotoHeight: 240px;
        --cardOffset: 12px;
        --cardRadius: 12px;
    }

    .header > .headerContent > .sectionTitle > h1 {
        font-size: 2em !important;
    }
}

/* Defining header div which contains section title and subtitle */
.mainLogo {
    min-width: 220px; /* defining min width for incredibly small windows/devices */
    grid-column: 1 / -1; /* Spans the entire row */
    width: calc(100% - 40px + var(--cardOffset));
    justify-self: center;
    display: flex;
    position: relative;
    filter: drop-shadow(0px 4px 8px rgba(0,0,0,.25));
    margin-bottom: 30px;

    & img {
        width: 100%;
    }
}


/* Creating grid used for displaying elements. Need to properly incorporate margins and resizing for different browsers ultimately */
.mainGrid {
    display: inline-grid;
    margin: auto;
    padding-top: 30px;
    row-gap: 30px; /* defining spacing between rows */
}


/* Defining project Entry element, which styles each project card 
    - Each card follows the same formatting, except for the first element, which shows as double-wide if possible
    - Card width can vary based on browser window size, defined using breakpoints
*/

.gridEntry {
    min-width: 220px;
    width: var(--cardWidth);
    height: calc(var(--cardPhotoHeight) + var(--cardOffset));
    display: flex;
    position: relative;
    top: 0px; /*ensures no margin at the top of each entry */
    transition: top 0.2s; /* add animation when hovering*/
    color: black; /* Text formatting */
    text-decoration: none;
    justify-self: center; /* Aligning content in the center of a frame */

    /* Adding animation when hovering over an entry */
    &:hover {
        top: 2px;
    }

    /* Defining parameters for background card material */
    .entryCard {
        width: calc(100% - var(--cardOffset));
        height: calc(var(--cardPhotoHeight));
        position: absolute;
        right: 0; /* pinning to bottom right corner */
        bottom: 0;
        background-color: white;
        border-radius: var(--cardRadius);
        filter: drop-shadow(0px 4px 8px rgba(0,0,0,.25));
        z-index: 0; /* card drawn at bottom layer of everything */
    }

    /* Defining image used to create outer edge blur effect */
    .entryImage {
        width: calc(100% - var(--cardOffset));
        height: var(--cardPhotoHeight);
        border-radius: var(--cardRadius);
        position: absolute;
        background-size: cover; /* Allow background image to completely cover blurred layer*/
        background-position: center center; /* Ensure position is centered properly */
        z-index: 1; /* establishing index of 1, being drawn only above the card material */

        /* Defining translucent material which covers the image */
        .translucentLayer {
            background-color: var(--translucentColor);
            border-radius: var(--cardRadius);
            width: 100%;
            height: 100%;
            position: absolute; /* ensures layer isn't moved by other items in the div */
            z-index: 2; /* drawn above the image to be blurred, but behind the clear image */
            backdrop-filter: blur(16px);
            -webkit-backdrop-filter: blur(16px); /* using webkit notation to ensure compatability in safari */
        }

        & img {
            width: calc(100% - var(--cardOffset)); /* offsetting width and height */
            height: calc(var(--cardPhotoHeight) - var(--cardOffset));
            border-top-left-radius: var(--cardRadius);
            border-bottom-right-radius: var(--cardRadius);
            right: 0; /* pinning to bottom right corner of container */
            bottom: 0;
            position: absolute;
            object-fit: cover;
            z-index: 3;
        }
    }

}

.overlaidText {
    z-index: 4; /* ensure text gets drawn over top of everything */
    height: 100%;
    width: 100%;
    display: flex;
    
    & h1 {
        display: inline-block;
        align-self: flex-end;
        font-size: 3em;
        text-transform: uppercase;
        color: white;
        margin: var(--cardOffset);
        padding: var(--cardOffset);
        padding-top: calc(var(--cardOffset) + (var(--cardPhotoHeight) / 3));
        width: 100%;
        background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.146));
        border-bottom-right-radius: var(--cardRadius);
    }
}

.wip {
    filter: brightness(70%);

    &:hover {
        top: 0px;
    }
}

/* Defining custom parameters for double-width entries */
@media screen and (min-width: 1024px) and (max-width: 1299px) {
    .gridEntry:nth-child(2) {
        grid-column: 1 / span 2; /* Ensure the entry spans the first two columns */
        width: calc(var(--cardWidth) + 50%); /* Make entry as wide as two smaller entries */

        .projectImage {
            width: calc(100% - var(--cardOffset)); /* change width and height to cover the whole card, minus offsets */
            height: calc(100% - var(--cardOffset));

            & img {
                width: calc(100% - var(--cardOffset)); /* changing width and height again */
                height: calc(100% - var(--cardOffset));
            }
        }
    }
}

/* Additional breakpoint fixes */
@media screen and (max-width: 1023px) {
    .gridEntry {
        width: calc(100% - 40px);
    }

    .mainLogo {
        width: calc(100% - 40px);
    }
}
